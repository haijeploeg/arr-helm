---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "radarr.labels" . | nindent 4 }}
    {{- with .Values.additionalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "radarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "radarr.labels" . | nindent 8 }}
        {{- with .Values.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: radarr
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: {{ .Values.env.puid | quote }}
            - name: PGID
              value: {{ .Values.env.pgid | quote }}
            - name: TZ
              value: {{ .Values.env.tz | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl "http://localhost:7878/radarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl "http://localhost:7878/radarr/api/system/status?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
            - name: movies
              mountPath: /movies
            - name: downloads
              mountPath: /downloads
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-config
        - name: movies
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-movies
        - name: downloads
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-downloads
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
