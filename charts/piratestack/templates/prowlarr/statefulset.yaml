{{- if .Values.prowlarr.enable }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prowlarr
  labels:
    {{- include "piratestack.labels" . | nindent 4 }}
    {{- include "prowlarr.selectorLabels" . | nindent 4 }}
    {{- with .Values.prowlarr.additionalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "prowlarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prowlarr.selectorLabels" . | nindent 8 }}
        {{- with .Values.prowlarr.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
      {{- toYaml .Values.prowlarr.securityContext.statefulSet | nindent 8 }}
      containers:
        - name: prowlarr
          image: "{{ .Values.prowlarr.image.repository }}:{{ .Values.prowlarr.image.tag }}"
          imagePullPolicy: {{ .Values.prowlarr.image.pullPolicy }}
          env:
            - name: TZ
              value: {{ .Values.shared.config.tz | quote }}
            - name: PUID
              value: {{ .Values.shared.config.puid | quote }}
            - name: PGID
              value: {{ .Values.shared.config.pgid | quote }}
            {{- if .Values.prowlarr.config.apikeySecret }}
            - name: PROWLARR__AUTH__APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.prowlarr.config.apikeySecret }}
                  key: apikey
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.prowlarr.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.prowlarr.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ .Values.prowlarr.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            {{- toYaml .Values.prowlarr.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.prowlarr.securityContext.pod | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /config
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          persistentVolumeClaim:
            claimName: prowlarr-config
      {{- with .Values.prowlarr.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prowlarr.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.prowlarr.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
